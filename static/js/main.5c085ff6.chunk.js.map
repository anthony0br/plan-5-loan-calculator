{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["THRESHOLD","AVERAGE_CPI","AVERAGE_RPI","REPAY_RATE","WRITE_OFF_TIME","CalculateYearsForm","props","_useState","useState","_useState2","_slicedToArray","loanAmount","setLoanAmount","_useState3","_useState4","startingSalary","setStartingSalary","_useState5","_useState6","salaryGrowth","setSalaryGrowth","_useState7","_useState8","salaryIncrease","setSalaryIncrease","_useState9","_useState10","loanClass","setLoanClass","_useState11","_useState12","salaryClass","setSalaryClass","_useState13","_useState14","increaseClass","setIncreaseClass","_useState15","_useState16","growthClass","setGrowthClass","_useState17","_useState18","resultsDisplay","setResultsDisplay","_useState19","_useState20","yearsResult","setYearsResult","_useState21","_useState22","salaryResult","setSalaryResult","_useState23","_useState24","totalPaid","setTotalPaid","resultsStyle","display","React","createElement","onSubmit","submitEvent","preventDefault","loanRemaining","Number","isNaN","salary","increase","growth","numYears","threshold","toPay","Math","round","type","className","value","onChange","event","target","style","App","href","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5c085ff6.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState }  from 'react';\n\n// Constant assumptions\nconst THRESHOLD = 25000;\nconst AVERAGE_CPI = 0.026;\nconst AVERAGE_RPI = 0.032;\nconst REPAY_RATE = 0.09;\nconst WRITE_OFF_TIME = 40;\n\nfunction CalculateYearsForm(props) {\n  // Input hooks\n  const [loanAmount, setLoanAmount] = useState(\"42000\");\n  const [startingSalary, setStartingSalary] = useState(\"25000\");\n  const [salaryGrowth, setSalaryGrowth] = useState(\"4\");\n  const [salaryIncrease, setSalaryIncrease] = useState(\"2000\");\n\n  // Output hooks\n  const [loanClass, setLoanClass] = useState(\"\");\n  const [salaryClass, setSalaryClass] = useState(\"\");\n  const [increaseClass, setIncreaseClass] = useState(\"\");\n  const [growthClass, setGrowthClass] = useState(\"\");\n  const [resultsDisplay, setResultsDisplay] = useState(\"none\");\n  const [yearsResult, setYearsResult] = useState(\"\");\n  const [salaryResult, setSalaryResult] = useState(\"\");\n  const [totalPaid, setTotalPaid] = useState(\"\");\n\n  // Calculate number of years, set states of results component to display results\n  function handleSubmit(submitEvent) {\n    // Hide old results and prevent refreshing\n    submitEvent.preventDefault();\n    setResultsDisplay(\"none\");\n\n    // Check for empty or invalid amounts and cast inputs\n    let loanRemaining = Number(loanAmount);\n    if (loanAmount === \"\" || Number.isNaN(loanRemaining) || loanRemaining < 0) {\n      setLoanClass(\"invalid\");\n      return;\n    }\n    let salary = Number(startingSalary);\n    if (startingSalary === \"\" || Number.isNaN(salary) || salary < 0) {\n      setSalaryClass(\"invalid\");\n      return;\n    }\n    let increase = Number(salaryIncrease);\n    if (salaryIncrease === \"\" || Number.isNaN(increase) || increase < 0) {\n      setIncreaseClass(\"invalid\");\n      return;\n    }\n    let growth = Number(salaryGrowth) * 0.01;\n    if (salaryGrowth === \"\" || Number.isNaN(growth) || growth < 0) {\n      setGrowthClass(\"invalid\");\n      return;\n    }\n\n    // Set textboxes to valid\n    setLoanClass(\"\");\n    setSalaryClass(\"\");\n    setIncreaseClass(\"\");\n    setGrowthClass(\"\");\n\n    // Calculate result\n    let numYears = 0;\n    let threshold = THRESHOLD;\n    let totalPaid = 0;\n    while (loanRemaining > 0 && numYears < WRITE_OFF_TIME) {\n      numYears += 1;\n\n      // Increase loan, salary, and the threshold\n      loanRemaining += loanRemaining * AVERAGE_RPI;\n      salary += increase;\n      salary *= 1 + growth;\n      threshold += threshold * AVERAGE_CPI;\n\n      // Repay part of the loan\n      if (salary > threshold) {\n        let toPay = (salary - threshold) * REPAY_RATE;\n        totalPaid += toPay;\n        loanRemaining -= toPay;\n      }\n    }\n\n    // Display results\n    setYearsResult(numYears);\n    setSalaryResult(Math.round(salary * 100) / 100);\n    setTotalPaid(Math.round(totalPaid * 100) / 100)\n    setResultsDisplay(\"block\");\n  }\n\n  const resultsStyle = {\n    display: resultsDisplay,\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h3>Total loan to pay</h3>\n      <p>The total outstanding amount you need to pay, including maintenance and tuition.</p>\n      <input type=\"number\" className={loanClass} value={loanAmount} onChange={event => {setLoanAmount(event.target.value)}} />\n\n      <h3>Salary modelling</h3>\n      <p>This is a simple model of your projected salary. It assumes your salary will increase by a fixed amount and then increase by a fixed percent each year.</p>\n      <p>Starting salary (£):</p>\n      <input type=\"number\" className={salaryClass} value={startingSalary} onChange={event => {setStartingSalary(event.target.value)}} />\n      <p>Salary growth (%) per year: </p>\n      <input type=\"number\" className={growthClass} value={salaryGrowth} onChange={event => {setSalaryGrowth(event.target.value)}} />\n      <p>Salary increase (£) per year: </p>\n      <input type=\"number\" className={increaseClass} value={salaryIncrease} onChange={event => {setSalaryIncrease(event.target.value)}} />\n      <br></br>\n      <br></br>\n      <button type=\"submit\">Calculate</button>\n      <br></br>\n      <br></br>\n      <div className=\"results\" style={resultsStyle}>\n        <h1>Results</h1>\n        <p>It will take roughly {yearsResult} years to pay off your plan 5 student loan. Note that after 40 years, your debt is wiped.</p>\n        <p>You will have paid a total of £{totalPaid} in student loan fees.</p>\n        <p>The the model puts your salary at the time of paying off the loan at £{salaryResult}.</p>\n      </div>\n    </form>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Plan 5 Student Loan Calculator\n        </p>\n      </header>\n      <body className=\"App-body\">\n        <CalculateYearsForm></CalculateYearsForm>\n      </body>\n      <footer className=\"App-footer\">\n        <p>\n          Created by Anthony O'Brien with React.js.\n          <br /><br />\n          Results are only valid for <b>UK Plan 5</b> undergraduate student loans.\n          <br />\n          Assumptions such as rate of RPI, CPI and future government policy (e.g. threshold is linked to CPI and not frozen, interest is always RPI) have been made. Due to British politics, these assumptions may become invalid. Interest and payments are calculated anually in this model.\n          <br /><br />\n          Licensed under GNU GPL-3.0. Last updated April 2023.\n        </p>\n        <a href=\"https://github.com/anthony0br/plan-5-loan-calculator\">View Github repository</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}